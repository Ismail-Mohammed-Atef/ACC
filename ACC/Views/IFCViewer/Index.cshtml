@model IfcViewerModel

@{
    Layout = null;
}
 <style>
    #container {
        width: 100vw;
        height: 100vh;
        overflow: hidden;
    }

    .toolsBar {
        position: absolute;
        right: 2rem;
        top: 2rem;
        display: flex;
        flex-direction: column;
    }

    .bar_btn {
        /* background-color: transparent; */
        position: relative;
        padding: 5px;
        justify-content: center;
        border: none;
        border-radius: 8px;
        align-content: center;
        align-items: center;
        width: 35px;
        height: 35px;
        background-color: beige;
        margin: 8px;
        box-shadow: 0 4px 15px rgba(212, 208, 208, 0.3);
        cursor: pointer;
    }

        .bar_btn:hover {
            background-color: gray;
        }

        .bar_btn.active {
            background-color: #e5e7eb;
            /* Light gray background when active */
        }
 </style>


<div id="container">
    <div id="toolsBar" class="toolsBar">
      <button id="loadBtn" class="bar_btn">
        <iconify-icon icon="iconoir:upload" width="24" height="24" height="25"></iconify-icon>
      </button>
      <button id="SectionBtn" class="bar_btn">
        <iconify-icon icon="icon-park-solid:cutting-one" width="24" height="24" height="25"></iconify-icon>
      </button>
      <button id="LengthBtn" class="bar_btn">
        <iconify-icon icon="lets-icons:line-in" width="24" height="24" height="25"></iconify-icon>
      </button>
    </div>
  </div>
    <script type="module" src="/dist/assets/viewer.js?v=@DateTime.Now.Ticks"></script>
    <script>
        console.log('hello from index view script');

        function waitFor(fnName, callback, tries = 50, delay = 500) {
            if (window[fnName]) {
                callback();
            } else if (tries > 0) {
                setTimeout(() => waitFor(fnName, callback, tries - 1, delay), delay);
            } else {
                console.warn(`${fnName} not ready after waiting`);
            }
        }

        document.getElementById("ifc-upload-btn").addEventListener("click", () => {
            console.log("upload button clicked");
            setTimeout(() => waitFor("uploadFile", () => window.uploadFile(@Model.ProjectId), 50, 500), 1000);
        });

        const fileId = @Model.FileId;
        if (fileId > 0) {
            setTimeout(() => waitFor("loadIfcFile", () => {
                const url = `/IfcViewer/GetIfcFile?id=${fileId}`;
                window.loadIfcFile(url);
            }, 10, 500), 1000);
        }
    </script>
