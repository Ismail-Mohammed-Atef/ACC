@model IfcViewerModel

@{
    Layout = null;
}
 <style>
      #container{
        height: 90vh;
        width: 100%;
      }
 </style>

@* <div class="toolbar-container"> *@
@*     <input type="file" id="ifcFileInput" accept=".ifc" /> *@
@*     <button id="ifc-upload-btn">Upload</button> *@
@*     <select id="fileSelect" onchange="if(this.value) window.loadIfcFile(`/IfcViewer/GetIfcFile?id=${this.value}`)"> *@
@*         <option value="">Select File</option> *@
@*         @foreach (var file in Model.AvailableFiles) *@
@*         { *@
@*             <option value="@file.Id">@file.FileName</option> *@
@*         } *@
@*     </select> *@
@* </div> *@

<div id="container"></div>

    <script type="module" src="/dist/assets/viewer.js?v=@DateTime.Now.Ticks"></script>
    <script>
        console.log('hello from index view script');

        function waitFor(fnName, callback, tries = 50, delay = 500) {
            if (window[fnName]) {
                callback();
            } else if (tries > 0) {
                setTimeout(() => waitFor(fnName, callback, tries - 1, delay), delay);
            } else {
                console.warn(`${fnName} not ready after waiting`);
            }
        }

        document.getElementById("ifc-upload-btn").addEventListener("click", () => {
            console.log("upload button clicked");
            setTimeout(() => waitFor("uploadFile", () => window.uploadFile(@Model.ProjectId), 50, 500), 1000);
        });

        const fileId = @Model.FileId;
        if (fileId > 0) {
            setTimeout(() => waitFor("loadIfcFile", () => {
                const url = `/IfcViewer/GetIfcFile?id=${fileId}`;
                window.loadIfcFile(url);
            }, 10, 500), 1000);
        }
    </script>
