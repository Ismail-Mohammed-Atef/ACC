@using ACC.ViewModels.MemberVM
@using ACC.ViewModels.MemberVM.MemberVM
@{
    var companies = new SelectList(ViewBag.Companies, "Id", "Name");
    var roles = new SelectList(ViewBag.Roles, "Id", "Name");
}

@model List<MemberVM>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Account Members</title>
    <link href="/css/site.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
</head>
<body>
    <div class="d-flex">
        <div class="container-fluid p-4">
            <h2>Account Members</h2>
            <div class="d-flex justify-content-between my-3">
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addMemberModal">+ Add members</button>
                <div class="d-flex">
                    <input type="text" class="form-control me-2" id="searchInput" placeholder="Search by name or email">
                </div>
            </div>

            <table class="table table-bordered" id="membersTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Status</th>
                        <th>Company</th>
                        <th>Default Role</th>
                        <th>Access Level</th>
                        <th>Added On</th>
                        <th><i class="fas fa-cog"></i></th>
                    </tr>
                </thead>
                <tbody id="membersTableBody">
                    @foreach (var member in Model)
                    {
                        <tr id="row-@member.Id" class="member-row" data-id="@member.Id">
                            <td>@member.Name</td>
                            <td>@member.Status</td>
                            <td>@member.Company</td>
                            <td>@member.Role</td>
                            <td>
                                @foreach (var accessLevel in member.AccessLevels)
                                {
                                    <span>@accessLevel</span>
                                }
                            </td>
                            <td>@member.AddedOn</td>
                            <td>
                                <div class="action-btn">
                                    <button class="btn btn-light btn-sm toggle-menu">
                                        <i class="bi bi-three-dots-vertical"></i>
                                    </button>
                                    <div class="action-menu">
                                        <button class="delete-btn" data-id="@member.Id">Delete</button>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Pagination Controls -->
            <div class="d-flex justify-content-center align-items-center mt-3">
                <nav>
                    <ul class="pagination" id="paginationControls"></ul>
                </nav>
            </div>

        </div>

        <!-- Placeholder for partial view -->
        <div id="updatePanelContainer"></div>
    </div>

    <partial name="PartialViews/_AddMemberPartialView" model="new InsertMemberVM()" />

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    <script>
        $(document).ready(function () {
            let currentPage = 1;
            const pageSize = 10;

            // Function to load members via AJAX
            function loadMembers(page, search = '') {
                $.ajax({
                    url: '/Member/Index',
                    type: 'GET',
                    data: { page: page, search: search, pageSize: pageSize },
                    success: function (response) {
                        updateTable(response.data || response); // Handle both JSON and direct model
                        updatePagination(response.totalItems || @Model.Count, page);
                    },
                    error: function () {
                        toastr.error('Failed to load members');
                    }
                });
            }

            // Update table content
            function updateTable(members) {
                const tbody = $('#membersTableBody');
                tbody.empty();
                members.forEach(member => {
                    const accessLevels = member.accessLevels.map(level => `<span>${level}</span>`).join(' ');
                    tbody.append(`
                        <tr id="row-${member.id}" class="member-row" data-id="${member.id}">
                            <td>${member.name}</td>
                            <td>${member.status}</td>
                            <td>${member.company}</td>
                            <td>${member.role}</td>
                            <td>${accessLevels}</td>
                            <td>${member.addedOn}</td>
                            <td>
                                <div class="action-btn">
                                    <button class="btn btn-light btn-sm toggle-menu">
                                        <i class="bi bi-three-dots-vertical"></i>
                                    </button>
                                    <div class="action-menu">
                                        <button class="delete-btn" data-id="${member.id}">Delete</button>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    `);
                });
            }

            // Update pagination
            function updatePagination(totalItems, currentPage) {
                const totalPages = Math.ceil(totalItems / pageSize);
                const pagination = $('#paginationControls');
                pagination.empty();

                pagination.append(`
                    <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                        <a class="page-link" href="#" data-page="${currentPage - 1}">Previous</a>
                    </li>
                `);

                for (let i = 1; i <= totalPages; i++) {
                    pagination.append(`
                        <li class="page-item ${i === currentPage ? 'active' : ''}">
                            <a class="page-link" href="#" data-page="${i}">${i}</a>
                        </li>
                    `);
                }

                pagination.append(`
                    <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                        <a class="page-link" href="#" data-page="${currentPage + 1}">Next</a>
                    </li>
                `);

                const start = (currentPage - 1) * pageSize + 1;
                const end = Math.min(currentPage * pageSize, totalItems);
                $('#showingStart').text(start);
                $('#showingEnd').text(end);
                $('#totalItems').text(totalItems);
            }

            // Search with debounce
            let searchTimeout;
            $('#searchInput').on('input', function () {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(() => {
                    currentPage = 1;
                    loadMembers(currentPage, $(this).val());
                }, 50);
            });

            // Pagination click handler
            $(document).on('click', '.page-link', function (e) {
                e.preventDefault();
                const page = $(this).data('page');
                if (page && !$(this).parent().hasClass('disabled')) {
                    currentPage = page;
                    loadMembers(currentPage, $('#searchInput').val());
                }
            });

            // Initial pagination setup (based on Model.Count)
            updatePagination(@Model.Count, currentPage);

            // Your original code unchanged below
            toastr.options = {
                "positionClass": "toast-top-right",
                "timeOut": "3000"
            };

            $(document).on("click", ".toggle-menu", function (e) {
                e.stopPropagation();
                var $menu = $(this).siblings(".action-menu");
                $(".action-menu").not($menu).hide();
                $menu.toggle();
            });

            $(document).on("click", function (e) {
                if (!$(e.target).closest(".action-btn").length) {
                    $(".action-menu").hide();
                }
            });

            $(document).on("click", ".member-row", function (e) {
                if (!$(e.target).closest(".toggle-menu, .delete-btn").length) {
                    $(".member-row").removeClass("active");
                    $(this).addClass("active");
                    var memberId = $(this).data("id");

                    $.ajax({
                        url: "/Member/GetUpdatePartial/" + memberId,
                        type: "GET",
                        success: function (partialViewHtml) {
                            $("#updatePanelContainer").html(partialViewHtml);
                            $("#memberDetailsPanel").addClass("show");
                        },
                        error: function (xhr, status, error) {
                            console.log("Error:", xhr, status, error);
                            toastr.error("Failed to load member update view.");
                        }
                    });
                }
            });

            $(document).on("click", "#closePanel", function () {
                $("#memberDetailsPanel").removeClass("show");
            });

            $(document).on("click", "#updateMemberBtn", function (e) {
                e.preventDefault();
                var memberId = $(".member-row.active").data("id");

                if (!memberId) {
                    toastr.error("Please select a member to update");
                    return;
                }

                var member = {
                    Email: $("#memberEmail").val(),
                    RoleId: $("#memberRole").val() || null,
                    CompanyId: $("#memberCompany").val() || null,
                    Status: $("#memberStatus").val(),
                    adminAccess: $("#adminAccess").is(":checked"),
                    excutive: $("#excutive").is(":checked"),
                    standardAccess: $("#standardAccess").is(":checked"),
                };
                console.log("Sending memberData:", JSON.stringify(member));
                $.ajax({
                    url: "/Member/Update/" + memberId,
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(member),
                    success: function (response) {
                        if (response.success) {
                            location.reload();
                            toastr.success("Member updated successfully");
                        }
                    },
                    error: function (xhr) {
                        if (xhr.status === 400) {
                            var errors = xhr.responseJSON.errors || {};
                            var errorMessages = [];
                            for (var key in errors) {
                                if (errors.hasOwnProperty(key)) {
                                    errorMessages.push(errors[key]);
                                }
                            }
                            $("#validationErrors").html(errorMessages.join("<br>")).show();
                        } else {
                            toastr.error("Failed to update member");
                        }
                    }
                });
            });

            $(document).on("click", ".delete-btn", function (e) {
                e.preventDefault();
                e.stopPropagation();
                var memberId = $(this).data("id");
                $(this).closest(".action-menu").hide();
                
                    $.ajax({
                        url: "/Member/Delete/" + memberId,
                        type: "POST",
                        success: function () {
                            $("#row-" + memberId).remove();
                            toastr.success("Member deleted successfully!");
                            $("#memberDetailsPanel").removeClass("show");
                        },
                        error: function () {
                            toastr.error("Failed to delete member.");
                        }
                    });
                
            });
        });
    </script>
</body>
</html>